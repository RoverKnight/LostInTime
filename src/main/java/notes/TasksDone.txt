- 20/08 - Created project
- 20/08 - Setup system structure i.e. Master classes & basic interface
- 20/08 - Added starting window "clock"
- 20/08 - Added window "shutdownConfirmation"
- 20/08 - Added working clock to clock window along with ClockUpdater class
          (subclass of Thread) to manage adjusting it
- 20/08 - Optimized ClockUpdater class to reduce strain
- 20/08 - Restructured the way windows are loaded: there now exists a method
          MasterInternal.loadWindow(String windowType) to manage all
          window loading actions, rather than having a separate method for
          each window in MasterInternal()

- 21/08 - Fixed clock running up to 1 minute behind
- 21/08 - Added MasterUpdater() as superclass of all updaters & implemented
          a MasterUpdater field in MasterView(), so that MasterInternal()
          can shut down the windows associated updater when closing it
- 21/08 - Subordinated internals & listeners to respective Master classes,
          then realized it doesn't actually provide any function besides
          the slight convenience of not having to make new
          view/internal/listener fields in each view/listener class. This
          however comes at the cost of having to change all constructor-
          parameters for these classes to their respective Master classes,
          and requires some casting to be done mainly in the listeners.
          Therefore, this change was rolled back.
- 21/08 - Added a basic timer (not yet functional)
- 21/08 - Added basic start/stop/restart functionality to timer

- 22/08 - Fixed stop/resume button not switching because timer was stopped only after
          updating GUI by making TimerInternal.stopTimer() wait until thread is dead
          before returning
- 22/08 - Added minute field to timer & reworked timer logic, now works smoothly

- 23/08 - Implemented resume functionality to timer

- 24/08 - Fixed stop & resume buttons not switching: forgot to fetch the return value
          from TimerInternal.resumeTimer(), so it wasn't given back to TimerView(), so
          it's true current status wasn't known to TimerView()
- 24/08 - Fixed start & reset buttons not switching: a condition for checking if timer
          is running or has run before was faulty, used isPaused boolean from Controller
          class even though it is never changed anywhere in the code
- 24/08 - Refactored TimerView.switch[...]Buttons() methods to .autoSwitch[...]Buttons
          respectively

- 26/08 - implemented new exception classes for input retrieval (also it's cool)
- 26/08 - successfully implemented rng input retrieval
- 26/08 - successfully implemented imported random number generator

- 28/08 - Removed imported rng classes ("x" & "ThreadGoBrrrr")
- 28/08 - Standardized fonts by making Font vars in MasterView()
- 28/08 - Implemented a shutdownConfirm window block if such a window is already
          active (i.e. there can now only be up to 1 shutdownConfirm window)
- 28/08 - Crudely implemented a new "FileWriter" window, which should eventually be
          able to function as a bare-bone text file creator/editor (note that only
          the GUI has been implemented so far, there is no functionality yet)

- 03/09 - Removed internal parameter from all view constructors
- 03/09 - Added tbo (topBarOffset) to MasterView & replaced usage
          of oso in setBoundsBy[...] & setCenteredFrameBounds with
          tbo, so that any positioning done in window-views is
          relative to bottom line of top GUI bar given by
          MasterView.addGeneralGUI()
- 03/09 - Added MasterView.getUsableHeight() to retrieve a given
          windows height available for gui elements
- 03/09 - Appropriated access modifiers of methods and vars in
          MasterView()
- 03/09 - Adjusted all views to new tbo implementation (since
          everything was moved down by tbo)
- 03/09 - Added auto-line-break method
          FileEditorInternal.convertWithLineBreaks() (holy fuck
          that was complicated) and implemented it in
          FileEditorView.writeToConsole()
- 03/09 - Implemented convertWithLineBreaks() to file content
- 03/09 - Fixed new line break being added to file content every
          time load button is clicked

- 04/09 - fixed convertWithLineBreaks() not adding line breaks when there
          is already a line break in the previous line by fetching the
          content with spaces rather than line-breaks via new method
          getContentWOutLineBreaks() before processing it with
          convertWithLineBreaks()
- 04/09 - implemented line breaks being added while typing
- 04/09 - optimized file editor code
- 04/09 - moved ClockView methods to ClockInternal & removed unnecessary
          methods
- 04/09 - removed ClockListener, since clock window has no elements that
          need a listener
- 04/09 - Centralized default buttonUI in MasterView as standardButtonUI
          and added instance variable customButtonUI for windows that
          prefer using a non-default buttonUI
- 04/09 - Removed -Internal parameters from all -Listener constructors