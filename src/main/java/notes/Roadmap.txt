DATE CREATED: 20/08/2021
STARTING IDEA: Make a timer

IDEAS:
- Implement methods to move/scale group of elements as one (e.g. a numpad)
- Implement input-error finder for file writer, which determines what part
  of the inputs caused an IO exception, then tells user
- Tic Tac Toe
- Implement Conways Game of Life w/ graphics

IMPLEMENTATIONS TO DO:
TODO: add lap, log functionality to timer
TODO: implement scroll bar for file content to file writer
TODO: (for file content @ file writer) implement automatic line break
      when edge is reached (or alternatively a horizontal scroll bar,
      additionally a button to switch auto-line-break on/off?)
TODO? account for OS differences in file writer functionality (specifically
      file pathing in windows)
TODO: let line breaks be inserted while typing in file content
TODO: separately store file content with intended line breaks/spaces
      so that final file isn't limited to being 75 chars wide

FIXES/REWORKS TO DO:
TODO: remove parameter for window internal from listener (all methods
      in internal classes are static, so there's no need for an
      instance of the internal)
TODO: fix rng status label not updating when generating number

TASKS DONE (TODAY):
- 04/09 - fixed convertWithLineBreaks() not adding line breaks when there
          is already a line break in the previous line by fetching the
          content with spaces rather than line-breaks via new method
          getContentWOutLineBreaks() before processing it with
          convertWithLineBreaks()
- 04/09 - implemented line breaks being added while typing
- 04/09 - optimized file editor code
- 04/09 - moved ClockView methods to ClockInternal & removed unnecessary
          methods
- 04/09 - removed ClockListener, since clock window has no elements that
          need a listener
- 04/09 - Centralized default buttonUI in MasterView as standardButtonUI
          and added instance variable customButtonUI for windows that
          prefer using a non-default buttonUI
- 04/09 - x
- 04/09 - x
- 04/09 - x